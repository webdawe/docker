image: docker:latest

services:
  - docker:dind

# Docker Cloud Variables
# Note: to use the Gitlab CI Registry, delete the variables from the CI settings.
# `echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin`
before_script:
  - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin

build-php-7.3:
  stage: build
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE/php:7.3
  script:
    - echo "The image tag is $IMAGE_TAG"
    - sed "s/php7.2/php7.3/g" "Dockerfile"
    - docker build --pull -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  only:
    - master

build-php-7.2:
  stage: build
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE/php:7.2
  script:
    - echo "The image tag is $IMAGE_TAG"
    - docker build --pull -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  only:
    - master

build-php-7.1:
  stage: build
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE/php:7.1
  script:
    - echo "The image tag is $IMAGE_TAG"
    - sed "s/php7.2/php7.1/g" "Dockerfile"
    - docker build --pull -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  only:
    - master

build-php-7.0:
  stage: build
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE/php:7.0
  script:
    - echo "The image tag is $IMAGE_TAG"
    - sed "s/php7.2/php7.0/g" "Dockerfile"
    - docker build --pull -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  only:
    - master

build-php-5.6:
  stage: build
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE/php:5.6
  script:
    - echo "The image tag is $IMAGE_TAG"
    - sed "s/php7.2/php5.6/g" "Dockerfile"
    - docker build --pull -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  only:
    - master

# Tags
build-tag:
  stage: build
  only:
    - tags
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE/php:$CI_COMMIT_TAG
  script:
    - echo "The image tag is $IMAGE_TAG"
    - docker build --pull -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
