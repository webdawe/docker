server {

  listen 80 default_server;
  listen [::]:80 default_server;

  server_name _;

  # SSL configuration
  # listen 443 ssl http2;
  # listen [::]:443 ssl http2;

  # ssl_certificate /etc/letsencrypt/live/robmellett.com/fullchain.pem;
  # ssl_certificate_key /etc/letsencrypt/live/robmellett.com/privkey.pem;
  # ssl_trusted_certificate /etc/letsencrypt/live/robmellett.com/fullchain.pem;

  # Note: You should disable gzip for SSL traffic.
  # See: https://bugs.debian.org/773332
  #
  # Read up on ssl_ciphers to ensure a secure configuration.
  # See: https://bugs.debian.org/765782
  #
  # Self signed certs generated by the ssl-cert package
  # Don't use them in a production server!
  #
  # include snippets/snakeoil.conf;

  root /var/www/html/public;

  # Add index.php to the list if you are using PHP
  index index.php index.html index.htm index.nginx-debian.html;

  server_name _;

  location / {
      try_files $uri $uri/ /index.php?$query_string;
  }

  # Cache Assets
  location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
    expires max;
    log_not_found off;
  }

  location = /favicon.ico {
      log_not_found off;
      access_log off;
  }

  location = /robots.txt {
      allow all;
      log_not_found off;
      access_log off;
  }

  # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
  location ~ \.php$ {
      include snippets/fastcgi-php.conf;

      # With php7.0-cgi alone:
      # fastcgi_pass 127.0.0.1:9000;
      # With php7.0-fpm:
      fastcgi_pass unix:/run/php/php7.3-fpm.sock;
  }

  # deny access to .htaccess files, if Apache's document root
  # concurs with nginx's one
  #
  location ~ /\.ht {
      deny all;
  }

  # Redirect ALL Traffic to HTTPS
  # if ($scheme = http) {
  #     return 301 https://$server_name$request_uri;
  # }
}
