FROM robmellett/base:latest
LABEL Rob Mellett <robmellett@gmail.com>

# Environmental Configuration
ENV XDEBUG_REMOTE_ENABLE=${XDEBUG_REMOTE_ENABLE}
ENV XDEBUG_REMOTE_AUTOSTART=${XDEBUG_REMOTE_AUTOSTART}
ENV XDEBUG_REMOTE_CONNECT_BACK=${XDEBUG_REMOTE_CONNECT_BACK}
ENV XDEBUG_HOST=${XDEBUG_HOST}
ENV XDEBUG_REMOTE_PORT=${XDEBUG_REMOTE_PORT}
ENV XDEBUG_IDEKEY=${XDEBUG_IDEKEY}

# Install Recommended Packages
RUN apt-get update \
  && apt-get -q -y install supervisor sqlite3

# Prometheus Monitoring
RUN curl https://s3-eu-west-1.amazonaws.com/deb.robustperception.io/41EFC99D.gpg | apt-key add -
RUN apt-get update && apt-get -q -y install prometheus-node-exporter

# Supervisor
COPY supervisor/supervisord.conf /etc/supervisor/supervisord.conf
COPY supervisor/conf.d/*.conf /etc/supervisor/conf.d-available/

# Confd
ADD https://github.com/kelseyhightower/confd/releases/download/v0.11.0/confd-0.11.0-linux-amd64 /usr/local/bin/confd
COPY ./confd/templates /etc/confd/templates
COPY ./confd/conf.d /etc/confd/conf.d

# Install Nginx
RUN apt-get update \
    && apt-get -q -y install software-properties-common \
    && apt-add-repository ppa:nginx/development \
    && apt-get -q -y update \
    && apt-get -q -y install nginx-full

ADD nginx/nginx.conf /etc/nginx/nginx.conf
ADD nginx/default.conf /etc/nginx/sites-available/default
ADD nginx/self-signed.conf /etc/nginx/snippets/self-signed.conf;
ADD nginx/ssl-params.conf /etc/nginx/snippets/ssl-params.conf;

# PHP
RUN add-apt-repository ppa:ondrej/php && apt-get update
RUN apt-get -q -y install \
    php7.3 \
    php7.3-fpm \
    php7.3-common \
    php7.3-cli \
    php7.3-mbstring \
    php7.3-xml \
    php7.3-curl \
    php7.3-gd \
    php7.3-dev \
    php7.3-xml \
    php7.3-bcmath \
    php7.3-mysql \
    php7.3-mbstring \
    php7.3-zip \
    php7.3-sqlite \
    php7.3-soap \
    php7.3-json \
    php7.3-intl \
    php7.3-imap \
    php7.3-pgsql \
    php-mysql \
    php-curl \
    php-zip \
    php-xdebug \
    php-memcached
RUN command -v php

COPY ./php/php.ini /etc/php/7.3/cli/php.ini
COPY ./php/xdebug.ini /etc/php/7.3/mods-available/xdebug.ini
COPY ./php/www.conf /etc/php/7.3/fpm/pool.d/www.conf
COPY ./php/php-fpm.conf /etc/php/7.3/fpm/php-fpm.conf

# Install Composer
RUN php -r "readfile('http://getcomposer.org/installer');" | php -- --install-dir=/usr/bin/ --filename=composer

# Copy Start Service Scripts
RUN mkdir -p /etc/my_init.d
COPY ./services/xdebug.sh /usr/sbin/xdebug.sh
COPY ./services/php.sh /etc/my_init.d/php.sh
COPY ./services/setup.sh /etc/my_init.d/setup
COPY ./ssl/ssl.sh /etc/my_init.d/ssl.sh

RUN chmod +x \
  /etc/my_init.d/setup \
  /etc/my_init.d/php.sh \
  /usr/sbin/xdebug.sh \
  /usr/local/bin/confd \
  /etc/my_init.d/ssl.sh

RUN chown -R ubuntu:www-data /var/www/html

# Expose the Logs to Docker
RUN ln -sf /dev/stdout /var/log/nginx/access.log \
    && ln -sf /dev/stderr /var/log/nginx/error.log \
    && ln -sf /dev/stdout /var/log/php7.3-fpm.log

# Use baseimage-docker's init system.
# https://github.com/phusion/baseimage-docker
CMD ["/sbin/my_init"]

# Clean up APT when done to minimise filesize.
RUN apt-get -q -y clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Set working directory to the project
WORKDIR /var/www/html

# Expose Ports for Web/HTTPS & Prometheus node_exporter
EXPOSE 80 443 9100
